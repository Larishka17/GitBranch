1. On the local repository, make branches for:
- Postman
- Jmeter
- CheckLists
- Bug Reports
- SQL
- Charles
- Mobile testing
=== git branch Postman && git branch Jmeter && git branch CheckLists && git branch BagReports && git branch SQL && git branch Charles && git branch MobileTesting 

2. Push all branches to an external repository === git push origin --all

3. In the Bug Reports branch, make a text document with the structure of a bug report === git checkout BugReports -> cat > bug_report_structure.txt 
EXAMPLE
Summary: Application crashes upon clicking the SAVE button while creating a new user. Bug ID: (It will be automatically created by the BUG Tracking tool once you save this bug). Build Number: Version Number 5.0.1 Severity: Blocker  (Blocker/Critical/Major/Minor/Enhancement) Priority: HIGH (High/Medium/Low)  Assigned to: Developer-X Reported By: Your Name Reported On: Date Reason: Defect Status: New/Open/Active (Depends on the Tool you are using) Environment: Windows 2003/SQL Server 2005
Description: Application crashes upon clicking the SAVE button while creating a new the user, hence unable to create a new user in the application.
Steps to Reproduce:
1) Login into the Application. 2) Navigate to the Users Menu -> New User 3) Filled out all the user information fields. 4) Clicked on the ‘Save’ button.
Actual Result: You'll see an error page “ORA1090 Exception: Insert values Error…” See the attached logs for more information (Attach more logs related to the bug..IF any) Also see the attached screenshot of the error page.
Expected Result: On clicking the SAVE button, you should be prompted to a successful message “New User has been created successfully”.
(Attach ‘application crash’ screenshot. IF any)
Attachments: bug_1.png

-> Control C

4. Push the bug report structure to an external repository === git add . && git commit -m «new file» -> git push --set-upstream origin BugReports

5. Merge the Bug Reports branch into Main === git checkout main -> git merge BugReports

6. Push main to external repository === git push 

7. Sketch the checklist structure in the CheckLists branch === git checkout CheckLists -> cat > CheckList_structure.txt
Checklist structure:
- General information (for example, a link and log in details to the website).
- Name of the section (subsection).
- List of checks (with the required level of detail).
- Type of verification (positive, negative).
- Test data.
- The expected behavior of the system.
- Information about the test environment: device, browser, screen resolution, etc.
- Check result (passed, failed, not executed).
- Bug number or a link to it in Jira (if the test is not passed).
-> Control C

8. Push structure to external repository === git add . && git commit -m "new file" -> git push --set-upstream origin CheckLists 

9. On an external repository, make a Pull Request of the CheckLists branch in main === Compare & pull request -> Create pull request -> Merge pull request -> Confirm merge 

10. Synchronise External and Local branches Main === git checkout main -> git pull
